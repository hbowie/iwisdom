<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by Rappahannock 0.10 available from PowerSurgePub.com -->
<wisdom>
  <item>
    <item-id>
      56 
    </item-id>
    <category>
      <category1>
        Software Development 
      </category1>
      <category2>
        Requirements 
      </category2>
    </category>
    <title>
      Difficulty of Requirements Discovery 
    </title>
    <file-name>
      difficulty_of_requirements_discovery 
    </file-name>
    <body>
      <p>Requirements are hard to understand and harder to specify. The wrong solution to this problem is to do a slipshod job of requirements specification, and rush ahead to design and code.... The right solution is to do whatever it takes to learn as many of the requirements as possible <i>now</i>. Do prototyping. Talk with more customers. Work for a month with a customer to get to know his or her job firsthand. Collect data. Do whatever it takes. </p>
    </body>
    <rating>
      Medium 
    </rating>
    <author>
      <name>
        Alan M. Davis 
      </name>
      <last-name>
        Davis 
      </last-name>
      <first-name>
        Alan M. 
      </first-name>
      <file-name>
        alan_m_davis 
      </file-name>
      <wikipedia-link>
        http://en.wikipedia.org/wiki/Alan_M._Davis 
      </wikipedia-link>
    </author>
    <source>
      <type>
        Book 
      </type>
      <title>
        201 Principles of Software Development 
      </title>
      <identifier>
        0070158401 
      </identifier>
      <rights>
        Copyright 
      </rights>
      <year>
        1995 
      </year>
      <owner>
        McGraw-Hill, Inc. 
      </owner>
      <file-name>
        201_principles_of_software_development 
      </file-name>
    </source>
    <date-added>
      2006-11-30T14:29:30-08:00 
    </date-added>
  </item>
</wisdom>
